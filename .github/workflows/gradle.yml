# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Health Card CI

on:
  push:
    branches: [ master ]
    paths:
      - "**" 
      - '!**.md'
  pull_request:
    paths:
      - "**" 
      - '!**.md'
  release:
    types:
      - created
  

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1.4.3
      with:
        java-version: 11
    - name: Cache Gradle wrapper
      id: cache-gradle-wrapper
      uses: actions/cache@v2.1.4
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-dependencies-     
    - name: Cache Dependencies
      id: cache-dependencies
      uses: actions/cache@v2.1.4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-dependencies-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-dependencies-
    - name: Check And Test
      run: ./gradlew check
      
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1.4.3
      with:
        java-version: 11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew clean build -x test

  docker-release:
    needs: [build]
    name: Build Docker container
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1.0.1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1.1.1
    - name: Docker Login Tencent Registry
      uses: docker/login-action@v1.8.0
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v2.2.2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tag: |
           chokho_workspace/health_card:latest
           chokho_workspace/health_card:$GITHUB_RUN_NUMBER
      
  docker-deploy:
    needs: [build,docker-release]
    name: Pull Docker container and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Pull and deploy
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker stop $(docker ps --filter ancestor=${{ secrets.REGISTRY }} -q)
            docker rm -f $(docker ps -a --filter ancestor=${{ secrets.REGISTRY }}:latest -q)
            docker rmi -f $(docker images  ${{ secrets.REGISTRY }}:latest -q)
            docker login --username=${{ secrets.REGISTRY_USERNAME }} --password=${{ secrets.REGISTRY_PASSWORD }} ccr.ccs.tencentyun.com
            docker pull ${{ secrets.REGISTRY }}:latest
            docker run -d -p ${{ secrets.HOST_PORT }}:${{ secrets.CONTAINER_PORT }} ${{ secrets.REGISTRY }}:latest --restart=always
